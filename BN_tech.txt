Battaglia Navale 2.0 — BN2CD.BAS
Venezia, 1987 / 2025

Questo documento raccoglie le note tecniche, le formule e le riflessioni nate durante lo sviluppo e il restauro del gioco. Ogni sezione è pensata per accompagnare il lettore nel cuore del codice, con umiltà e chiarezza.

───────────────────────────────────────────────
1. Flotta dinamica e griglia variabile
───────────────────────────────────────────────

La dimensione della griglia (XY) determina la composizione della flotta. Il gioco adatta il numero e la lunghezza delle navi in modo proporzionale.

Formula:
  Lunghezza = INT(XY / 5) - 1
  LunghezzaNave(i) = 1 + Lunghezza - i
  QuantitàNavi(i) = CINT(i * XY / 10 - 1 / XY)

Esempi:
  XY = 10 → 4 classi, 10 navi totali
  XY = 20 → 5 classi, 30 navi totali

Questa dinamica garantisce varietà e bilanciamento, evitando griglie troppo vuote o troppo affollate.

───────────────────────────────────────────────
2. Intelligenza artificiale
───────────────────────────────────────────────

L’IA memorizza i colpi a segno e li insegue con logica deduttiva.

Routine principali:
- ColpiInseguiti(): memorizza coordinate dei colpi utili.
- DeduciOrientamentoNave(): analizza la sequenza per capire se la nave è orizzontale o verticale.
- MarcaContornoNave(): dopo l’affondamento, marca il contorno per evitare colpi inutili.

Queste routine permettono all’IA di comportarsi in modo credibile e strategico, simulando una memoria tattica.

───────────────────────────────────────────────
3. Punteggio e classifica Top Ten
───────────────────────────────────────────────

Il punteggio premia:
- Rapidità (Secondi!)
- Efficienza (ColpiSprecati)
- Complessità della griglia

Formula:
  Punteggio = INT(10000 / (Secondi! + ColpiSprecati + XY))

La classifica è salvata in `BN2TOP.DAT`, con nome, punteggio e data. Il gioco propone l’inserimento automatico se il punteggio è tra i primi 10.

───────────────────────────────────────────────
4. Compatibilità e input
───────────────────────────────────────────────

- Richiede QuickBASIC / QBX / VBDOS / DOSBox
- Tastiera con frecce (INKEY$)
- CGA o superiore per visualizzazione corretta

Il cursore è controllato da frecce, con feedback visivo. Il piazzamento è assistito da controlli di ingombro e sovrapposizione.

───────────────────────────────────────────────
5. Test automatici e benchmark
───────────────────────────────────────────────

Cinque test (`BN2TEST1-5.BAS`) verificano:
- Piazzamento rapido
- Calcolo ingombri
- Collaudo punteggi
- Piazzamenti compatti
- Istogramma flotte

Ogni test produce un file `.DAT` con output leggibile. Gli screenshot (`BN2-01.png` → `BN2-05.png`) mostrano i risultati visivi.

───────────────────────────────────────────────
6. Commenti emblematici nel codice
───────────────────────────────────────────────

- `SUB MarcaContornoNave`: evita colpi inutili, simula buon senso.
- `IF ColpiInseguiti > 0 THEN GOSUB DeduciOrientamentoNave`: IA con memoria.
- `FOR i = 1 TO Lunghezza`: flotta proporzionale.
- `PRINT "Hai affondato una nave da"; LunghezzaNave(i); "celle!"`: feedback narrativo.

───────────────────────────────────────────────
7. Riflessioni finali
───────────────────────────────────────────────

Questo gioco è parte di un archivio vivente. Ogni test è una poesia algoritmica, ogni formula una riflessione sul tempo e sull’efficienza. Il restauro ha cercato di rispettare lo spirito originale, aggiungendo chiarezza e documentazione.

Grazie per aver navigato con me.
